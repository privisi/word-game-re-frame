["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\r\ngoog.require('cljs.core');\r\ngoog.require('re_frame.router');\r\ngoog.require('re_frame.db');\r\ngoog.require('re_frame.interceptor');\r\ngoog.require('re_frame.interop');\r\ngoog.require('re_frame.events');\r\ngoog.require('re_frame.registrar');\r\ngoog.require('re_frame.loggers');\r\ngoog.require('re_frame.trace');\r\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\r\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\r\n} else {\r\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\r\n}\r\n/**\r\n * Register the given effect `handler` for the given `id`.\r\n * \r\n *   `id` is keyword, often namespaced.\r\n *   `handler` is a side-effecting function which takes a single argument and whose return\r\n *   value is ignored.\r\n * \r\n *   Example Use\r\n *   -----------\r\n * \r\n *   First, registration ... associate `:effect2` with a handler.\r\n * \r\n *   (reg-fx\r\n *   :effect2\r\n *   (fn [value]\r\n *      ... do something side-effect-y))\r\n * \r\n *   Then, later, if an event handler were to return this effects map ...\r\n * \r\n *   {...\r\n * :effect2  [1 2]}\r\n * \r\n * ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\r\n * called with an argument of `[1 2]`.\r\n */\r\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\r\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\r\n});\r\n/**\r\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\r\n *   this interceptor is Domino 3.\r\n * \r\n *   This interceptor is silently added (by reg-event-db etc) to the front of\r\n *   interceptor chains for all events.\r\n * \r\n *   For each key in `:effects` (a map), it calls the registered `effects handler`\r\n *   (see `reg-fx` for registration of effect handlers).\r\n * \r\n *   So, if `:effects` was:\r\n *    {:dispatch  [:hello 42]\r\n *     :db        {...}\r\n *     :undo      \"set flag\"}\r\n * \r\n *   it will call the registered effect handlers for each of the map's keys:\r\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\r\n *   value for that key - so in the example above the effect handler for :dispatch\r\n *   will be given one arg `[:hello 42]`.\r\n * \r\n *   You cannot rely on the ordering in which effects are executed.\r\n */\r\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\r\nif(re_frame.trace.is_trace_enabled_QMARK_()){\r\nvar _STAR_current_trace_STAR__orig_val__62351 = re_frame.trace._STAR_current_trace_STAR_;\r\nvar _STAR_current_trace_STAR__temp_val__62352 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\r\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__62352);\r\n\r\ntry{try{var seq__62354 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\r\nvar chunk__62355 = null;\r\nvar count__62356 = (0);\r\nvar i__62357 = (0);\r\nwhile(true){\r\nif((i__62357 < count__62356)){\r\nvar vec__62367 = chunk__62355.cljs$core$IIndexed$_nth$arity$2(null,i__62357);\r\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__62367,(0),null);\r\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__62367,(1),null);\r\nvar temp__5733__auto___62429 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\r\nif(cljs.core.truth_(temp__5733__auto___62429)){\r\nvar effect_fn_62430 = temp__5733__auto___62429;\r\n(effect_fn_62430.cljs$core$IFn$_invoke$arity$1 ? effect_fn_62430.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_62430.call(null,effect_value));\r\n} else {\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\r\n}\r\n\r\n\r\nvar G__62431 = seq__62354;\r\nvar G__62432 = chunk__62355;\r\nvar G__62433 = count__62356;\r\nvar G__62434 = (i__62357 + (1));\r\nseq__62354 = G__62431;\r\nchunk__62355 = G__62432;\r\ncount__62356 = G__62433;\r\ni__62357 = G__62434;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto__ = cljs.core.seq(seq__62354);\r\nif(temp__5735__auto__){\r\nvar seq__62354__$1 = temp__5735__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__62354__$1)){\r\nvar c__4556__auto__ = cljs.core.chunk_first(seq__62354__$1);\r\nvar G__62435 = cljs.core.chunk_rest(seq__62354__$1);\r\nvar G__62436 = c__4556__auto__;\r\nvar G__62437 = cljs.core.count(c__4556__auto__);\r\nvar G__62438 = (0);\r\nseq__62354 = G__62435;\r\nchunk__62355 = G__62436;\r\ncount__62356 = G__62437;\r\ni__62357 = G__62438;\r\ncontinue;\r\n} else {\r\nvar vec__62372 = cljs.core.first(seq__62354__$1);\r\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__62372,(0),null);\r\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__62372,(1),null);\r\nvar temp__5733__auto___62439 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\r\nif(cljs.core.truth_(temp__5733__auto___62439)){\r\nvar effect_fn_62440 = temp__5733__auto___62439;\r\n(effect_fn_62440.cljs$core$IFn$_invoke$arity$1 ? effect_fn_62440.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_62440.call(null,effect_value));\r\n} else {\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\r\n}\r\n\r\n\r\nvar G__62441 = cljs.core.next(seq__62354__$1);\r\nvar G__62442 = null;\r\nvar G__62443 = (0);\r\nvar G__62444 = (0);\r\nseq__62354 = G__62441;\r\nchunk__62355 = G__62442;\r\ncount__62356 = G__62443;\r\ni__62357 = G__62444;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\r\nvar end__62081__auto___62445 = re_frame.interop.now();\r\nvar duration__62082__auto___62446 = (end__62081__auto___62445 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\r\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__62082__auto___62446,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\r\n\r\nre_frame.trace.run_tracing_callbacks_BANG_(end__62081__auto___62445);\r\n} else {\r\n}\r\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__62351);\r\n}} else {\r\nvar seq__62376 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\r\nvar chunk__62377 = null;\r\nvar count__62378 = (0);\r\nvar i__62379 = (0);\r\nwhile(true){\r\nif((i__62379 < count__62378)){\r\nvar vec__62387 = chunk__62377.cljs$core$IIndexed$_nth$arity$2(null,i__62379);\r\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__62387,(0),null);\r\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__62387,(1),null);\r\nvar temp__5733__auto___62447 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\r\nif(cljs.core.truth_(temp__5733__auto___62447)){\r\nvar effect_fn_62448 = temp__5733__auto___62447;\r\n(effect_fn_62448.cljs$core$IFn$_invoke$arity$1 ? effect_fn_62448.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_62448.call(null,effect_value));\r\n} else {\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\r\n}\r\n\r\n\r\nvar G__62449 = seq__62376;\r\nvar G__62450 = chunk__62377;\r\nvar G__62451 = count__62378;\r\nvar G__62452 = (i__62379 + (1));\r\nseq__62376 = G__62449;\r\nchunk__62377 = G__62450;\r\ncount__62378 = G__62451;\r\ni__62379 = G__62452;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto__ = cljs.core.seq(seq__62376);\r\nif(temp__5735__auto__){\r\nvar seq__62376__$1 = temp__5735__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__62376__$1)){\r\nvar c__4556__auto__ = cljs.core.chunk_first(seq__62376__$1);\r\nvar G__62453 = cljs.core.chunk_rest(seq__62376__$1);\r\nvar G__62454 = c__4556__auto__;\r\nvar G__62455 = cljs.core.count(c__4556__auto__);\r\nvar G__62456 = (0);\r\nseq__62376 = G__62453;\r\nchunk__62377 = G__62454;\r\ncount__62378 = G__62455;\r\ni__62379 = G__62456;\r\ncontinue;\r\n} else {\r\nvar vec__62390 = cljs.core.first(seq__62376__$1);\r\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__62390,(0),null);\r\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__62390,(1),null);\r\nvar temp__5733__auto___62457 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\r\nif(cljs.core.truth_(temp__5733__auto___62457)){\r\nvar effect_fn_62458 = temp__5733__auto___62457;\r\n(effect_fn_62458.cljs$core$IFn$_invoke$arity$1 ? effect_fn_62458.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_62458.call(null,effect_value));\r\n} else {\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\r\n}\r\n\r\n\r\nvar G__62459 = cljs.core.next(seq__62376__$1);\r\nvar G__62460 = null;\r\nvar G__62461 = (0);\r\nvar G__62462 = (0);\r\nseq__62376 = G__62459;\r\nchunk__62377 = G__62460;\r\ncount__62378 = G__62461;\r\ni__62379 = G__62462;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n})], 0));\r\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\r\nvar seq__62393 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\r\nvar chunk__62394 = null;\r\nvar count__62395 = (0);\r\nvar i__62396 = (0);\r\nwhile(true){\r\nif((i__62396 < count__62395)){\r\nvar map__62404 = chunk__62394.cljs$core$IIndexed$_nth$arity$2(null,i__62396);\r\nvar map__62404__$1 = (((((!((map__62404 == null))))?(((((map__62404.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__62404.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__62404):map__62404);\r\nvar effect = map__62404__$1;\r\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__62404__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\r\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__62404__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\r\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\r\n} else {\r\nre_frame.interop.set_timeout_BANG_(((function (seq__62393,chunk__62394,count__62395,i__62396,map__62404,map__62404__$1,effect,ms,dispatch){\r\nreturn (function (){\r\nreturn re_frame.router.dispatch(dispatch);\r\n});})(seq__62393,chunk__62394,count__62395,i__62396,map__62404,map__62404__$1,effect,ms,dispatch))\r\n,ms);\r\n}\r\n\r\n\r\nvar G__62463 = seq__62393;\r\nvar G__62464 = chunk__62394;\r\nvar G__62465 = count__62395;\r\nvar G__62466 = (i__62396 + (1));\r\nseq__62393 = G__62463;\r\nchunk__62394 = G__62464;\r\ncount__62395 = G__62465;\r\ni__62396 = G__62466;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto__ = cljs.core.seq(seq__62393);\r\nif(temp__5735__auto__){\r\nvar seq__62393__$1 = temp__5735__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__62393__$1)){\r\nvar c__4556__auto__ = cljs.core.chunk_first(seq__62393__$1);\r\nvar G__62467 = cljs.core.chunk_rest(seq__62393__$1);\r\nvar G__62468 = c__4556__auto__;\r\nvar G__62469 = cljs.core.count(c__4556__auto__);\r\nvar G__62470 = (0);\r\nseq__62393 = G__62467;\r\nchunk__62394 = G__62468;\r\ncount__62395 = G__62469;\r\ni__62396 = G__62470;\r\ncontinue;\r\n} else {\r\nvar map__62407 = cljs.core.first(seq__62393__$1);\r\nvar map__62407__$1 = (((((!((map__62407 == null))))?(((((map__62407.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__62407.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__62407):map__62407);\r\nvar effect = map__62407__$1;\r\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__62407__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\r\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__62407__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\r\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\r\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\r\n} else {\r\nre_frame.interop.set_timeout_BANG_(((function (seq__62393,chunk__62394,count__62395,i__62396,map__62407,map__62407__$1,effect,ms,dispatch,seq__62393__$1,temp__5735__auto__){\r\nreturn (function (){\r\nreturn re_frame.router.dispatch(dispatch);\r\n});})(seq__62393,chunk__62394,count__62395,i__62396,map__62407,map__62407__$1,effect,ms,dispatch,seq__62393__$1,temp__5735__auto__))\r\n,ms);\r\n}\r\n\r\n\r\nvar G__62471 = cljs.core.next(seq__62393__$1);\r\nvar G__62472 = null;\r\nvar G__62473 = (0);\r\nvar G__62474 = (0);\r\nseq__62393 = G__62471;\r\nchunk__62394 = G__62472;\r\ncount__62395 = G__62473;\r\ni__62396 = G__62474;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}));\r\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\r\nif((!(cljs.core.vector_QMARK_(value)))){\r\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\r\n} else {\r\nreturn re_frame.router.dispatch(value);\r\n}\r\n}));\r\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\r\nif((!(cljs.core.sequential_QMARK_(value)))){\r\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\r\n} else {\r\nvar seq__62421 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\r\nvar chunk__62422 = null;\r\nvar count__62423 = (0);\r\nvar i__62424 = (0);\r\nwhile(true){\r\nif((i__62424 < count__62423)){\r\nvar event = chunk__62422.cljs$core$IIndexed$_nth$arity$2(null,i__62424);\r\nre_frame.router.dispatch(event);\r\n\r\n\r\nvar G__62475 = seq__62421;\r\nvar G__62476 = chunk__62422;\r\nvar G__62477 = count__62423;\r\nvar G__62478 = (i__62424 + (1));\r\nseq__62421 = G__62475;\r\nchunk__62422 = G__62476;\r\ncount__62423 = G__62477;\r\ni__62424 = G__62478;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto__ = cljs.core.seq(seq__62421);\r\nif(temp__5735__auto__){\r\nvar seq__62421__$1 = temp__5735__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__62421__$1)){\r\nvar c__4556__auto__ = cljs.core.chunk_first(seq__62421__$1);\r\nvar G__62479 = cljs.core.chunk_rest(seq__62421__$1);\r\nvar G__62480 = c__4556__auto__;\r\nvar G__62481 = cljs.core.count(c__4556__auto__);\r\nvar G__62482 = (0);\r\nseq__62421 = G__62479;\r\nchunk__62422 = G__62480;\r\ncount__62423 = G__62481;\r\ni__62424 = G__62482;\r\ncontinue;\r\n} else {\r\nvar event = cljs.core.first(seq__62421__$1);\r\nre_frame.router.dispatch(event);\r\n\r\n\r\nvar G__62483 = cljs.core.next(seq__62421__$1);\r\nvar G__62484 = null;\r\nvar G__62485 = (0);\r\nvar G__62486 = (0);\r\nseq__62421 = G__62483;\r\nchunk__62422 = G__62484;\r\ncount__62423 = G__62485;\r\ni__62424 = G__62486;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n}\r\n}));\r\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\r\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\r\nif(cljs.core.sequential_QMARK_(value)){\r\nvar seq__62425 = cljs.core.seq(value);\r\nvar chunk__62426 = null;\r\nvar count__62427 = (0);\r\nvar i__62428 = (0);\r\nwhile(true){\r\nif((i__62428 < count__62427)){\r\nvar event = chunk__62426.cljs$core$IIndexed$_nth$arity$2(null,i__62428);\r\nclear_event(event);\r\n\r\n\r\nvar G__62487 = seq__62425;\r\nvar G__62488 = chunk__62426;\r\nvar G__62489 = count__62427;\r\nvar G__62490 = (i__62428 + (1));\r\nseq__62425 = G__62487;\r\nchunk__62426 = G__62488;\r\ncount__62427 = G__62489;\r\ni__62428 = G__62490;\r\ncontinue;\r\n} else {\r\nvar temp__5735__auto__ = cljs.core.seq(seq__62425);\r\nif(temp__5735__auto__){\r\nvar seq__62425__$1 = temp__5735__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(seq__62425__$1)){\r\nvar c__4556__auto__ = cljs.core.chunk_first(seq__62425__$1);\r\nvar G__62491 = cljs.core.chunk_rest(seq__62425__$1);\r\nvar G__62492 = c__4556__auto__;\r\nvar G__62493 = cljs.core.count(c__4556__auto__);\r\nvar G__62494 = (0);\r\nseq__62425 = G__62491;\r\nchunk__62426 = G__62492;\r\ncount__62427 = G__62493;\r\ni__62428 = G__62494;\r\ncontinue;\r\n} else {\r\nvar event = cljs.core.first(seq__62425__$1);\r\nclear_event(event);\r\n\r\n\r\nvar G__62495 = cljs.core.next(seq__62425__$1);\r\nvar G__62496 = null;\r\nvar G__62497 = (0);\r\nvar G__62498 = (0);\r\nseq__62425 = G__62495;\r\nchunk__62426 = G__62496;\r\ncount__62427 = G__62497;\r\ni__62428 = G__62498;\r\ncontinue;\r\n}\r\n} else {\r\nreturn null;\r\n}\r\n}\r\nbreak;\r\n}\r\n} else {\r\nreturn clear_event(value);\r\n}\r\n}));\r\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\r\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\r\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\r\n} else {\r\nreturn null;\r\n}\r\n}));\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react-dom","~$module$node_modules$react_dom$index","~$react","~$module$node_modules$react$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^K","~$re-frame.interceptor","^L","~$re-frame.events","^M","~$re-frame.trace","^N","~$re-frame.registrar","^O","~$cljs.core","^P","~$goog","^Q","~$router","~$re-frame.router","^S","^S","~$trace","^N","~$events","^M","~$re-frame.loggers","^V","~$re-frame.db","^W"],"~:seen",["^D",["~:require"]],"~:uses",["^ ","~$app-db","^W","~$->interceptor","^L","~$set-timeout!","^K","~$get-handler","^O","~$clear-handlers","^O","~$register-handler","^O","~$console","^V"],"~:require-macros",["^ ","^N","^N","^T","^N","^P","^P"],"~:form",["~#list",["~$ns","^F",["^18",["^Y",["^S","~:as","^R"],["^W","~:refer",["^["]],["^L","^1;",["^10"]],["^K","^1;",["^11"]],["^M","^1:","^U"],["^O","^1;",["^12","^13","^14"]],["^V","^1;",["^15"]],["^N","^1:","^T","~:include-macros",true]]]]],"~:flags",["^ ","^Y",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^Q","^P","^S","^W","^L","^K","^M","^O","^V","^N"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1590074294234,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  \"Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`.\"\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (doseq [[effect-key effect-value] (:effects context)]\n                 (if-let [effect-fn (get-handler kind effect-key false)]\n                   (effect-fn effect-value)\n                   (console :error \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\")))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (doseq [{:keys [ms dispatch] :as effect} (remove nil? value)]\n        (if (or (empty? dispatch) (not (number? ms)))\n          (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n          (set-timeout! #(router/dispatch dispatch) ms)))))\n\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";;;;;;;;;;AAcA,AAAA,AAAKA;AACL,AAAQ,AAACE,AAAAA,AAAAA,AAAyBF,AAAAA;AAAlC;AAAA,AAAA,AAAA,AAAAC,AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAME,AAwBHC,AAAGC;AAxBN,AAyBE,AAACC,AAAiBN,AAAKI,AAAGC;;AAI5B;;;;;;;;;;;;;;;;;;;;;;AAAKE,AAqBH,AAAA,AAAA,AAAA,AAACC,AAEQ,AACGC;AADH,AAEE,AAAA,AAAAC;AAAA,AAAAC,AAAAC;AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAF,AAAAC;;AAAA,AAAA,AAAA,AAAA,AAEE,AAAAU,AAAA,AAAAC,AAAkC,AAAA,AAAUf;AAA5CgB,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASiB;AAAT,AAAAhB,AAAAD,AAAA,AAAA,AAAoBkB;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAYjD,AAAK6C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAAtB;AAAAE;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAG,AAAA,AAAAN,AAAAD;AAAA,AAAA,AAAAO;AAAA,AAAA,AAAAP,AAAAO;AAAA,AAAA,AAAA,AAAAC,AAAAR;AAAA,AAAAS,AAAA,AAAAC,AAAAV;AAAA,AAAA,AAAA,AAAAW,AAAAX;AAAAS;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAAI,AAAA,AAAAC,AAAAd;AAAA,AAAAM,AAAAO,AAAA,AAAA,AAASS;AAAT,AAAAhB,AAAAO,AAAA,AAAA,AAAoBU;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAYjD,AAAK6C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAA,AAAAP,AAAAf;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAFF,AAAA,AAAA,AAAAb;AAAA,AAAA,AAAAK,AAAA,AAAAC;AAAAC,AAAA,AAAAF,AAAA,AAAA,AAAAH;AAAA,AAAA,AAAAM,AAAAC,AAAAC,AAAA,AAAAC,AAAAT,AAAA,AAAAK,AAAA,AAAA,AAAAD;;AAAA,AAAAM,AAAAP;;AAAA;AAAA,AAAA,AAAAH,AAAAD;;AAAA,AAEE,AAAA4B,AAAA,AAAAf,AAAkC,AAAA,AAAUf;AAA5C+B,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAA,AAAAb,AAAAc,AAAA,AAAA,AAASE;AAAT,AAAAhB,AAAAc,AAAA,AAAA,AAAoBG;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAYjD,AAAK6C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAAN;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAZ,AAAA,AAAAN,AAAAe;AAAA,AAAA,AAAAT;AAAA,AAAA,AAAAS,AAAAT;AAAA,AAAA,AAAA,AAAAC,AAAAQ;AAAA,AAAAP,AAAA,AAAAC,AAAAM;AAAA,AAAA,AAAA,AAAAL,AAAAK;AAAAP;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAAY,AAAA,AAAAP,AAAAE;AAAA,AAAAV,AAAAe,AAAA,AAAA,AAASC;AAAT,AAAAhB,AAAAe,AAAA,AAAA,AAAoBE;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAYjD,AAAK6C;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAA6DL;;;AAHlE;AAAA,AAAA,AAAAP,AAAAC;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;;AAsBf,AAAA,AAACpC,AAEC,AAAKgD;AAAL,AACE,AAAAC,AAAA,AAAA5B,AAAyC,AAACyC,AAAOC,AAAKf;AAAtDE,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAAiCQ;AAAjC,AAAAJ,AAAAJ,AAAA,AAAgBM;AAAhB,AAAAF,AAAAJ,AAAA,AAAmBO;AAAnB,AAAA,AACI,AAAI,AAAI,AAACI,AAAOJ,AAAU,AAAK,AAASD;AACtC,AAAA,AAAA,AAACZ,AAA+Dc;;AAChE,AAAA,AAACI;;AAAD,AAAe,AAACC,AAAgBN;;AAAUD;;;AAHhD;AAAA,AAAAV;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAzB,AAAA,AAAAN,AAAA4B;AAAA,AAAA,AAAAtB;AAAA,AAAA,AAAAsB,AAAAtB;AAAA,AAAA,AAAA,AAAAC,AAAAqB;AAAA,AAAApB,AAAA,AAAAC,AAAAmB;AAAA,AAAA,AAAA,AAAAlB,AAAAkB;AAAApB;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA6B,AAAA,AAAAxB,AAAAe;AAAAS,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAJ,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAAC,AAAAE,AAAAA;AAAAA,AAAiCG;AAAjC,AAAAJ,AAAAC,AAAA,AAAgBC;AAAhB,AAAAF,AAAAC,AAAA,AAAmBE;AAAnB,AAAA,AACI,AAAI,AAAI,AAACI,AAAOJ,AAAU,AAAK,AAASD;AACtC,AAAA,AAAA,AAACZ,AAA+Dc;;AAChE,AAAA,AAACI;;AAAD,AAAe,AAACC,AAAgBN;;AAAUD;;;AAHhD;AAAA,AAAA,AAAAxB,AAAAc;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AAaJ,AAAA,AAACjD,AAEC,AAAKgD;AAAL,AACE,AAAA,AAAQ,AAACmB,AAAQnB;AACf,AAAA,AAAA,AAACD,AAAqFC;;AACtF,AAACkB,AAAgBlB;;;AAgBvB,AAAA,AAAChD,AAEC,AAAKgD;AAAL,AACE,AAAA,AAAQ,AAACoB,AAAYpB;AACnB,AAAA,AAAA,AAACD,AAA2FC;;AAC5F,AAAAqB,AAAA,AAAAhD,AAAc,AAACyC,AAAOC,AAAKf;AAA3BsB,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQC;AAAR,AAAA,AAAmC,AAACP,AAAgBO;;AAApD;AAAA,AAAAJ;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAA7C,AAAA,AAAAN,AAAAgD;AAAA,AAAA,AAAA1C;AAAA,AAAA,AAAA0C,AAAA1C;AAAA,AAAA,AAAA,AAAAC,AAAAyC;AAAA,AAAAxC,AAAA,AAAAC,AAAAuC;AAAA,AAAA,AAAA,AAAAtC,AAAAsC;AAAAxC;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAK,AAAAmC,AAAQI;AAAR,AAAA,AAAmC,AAACP,AAAgBO;;AAApD;AAAA,AAAA,AAAAtC,AAAAkC;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;;AAaN,AAAA,AAACrE,AAEC,AAAKgD;AAAL,AACE,AAAM0B,AAAY,AAACC,AAAQC,AAAeC;AAA1C,AACE,AAAI,AAACT,AAAYpB;AACf,AAAA8B,AAAA,AAAAzD,AAAc2B;AAAd+B,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQR;AAAR,AAAA,AAAqB,AAACC,AAAYD;;AAAlC;AAAA,AAAAK;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAtD,AAAA,AAAAN,AAAAyD;AAAA,AAAA,AAAAnD;AAAA,AAAA,AAAAmD,AAAAnD;AAAA,AAAA,AAAA,AAAAC,AAAAkD;AAAA,AAAAjD,AAAA,AAAAC,AAAAgD;AAAA,AAAA,AAAA,AAAA/C,AAAA+C;AAAAjD;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAK,AAAA4C,AAAQL;AAAR,AAAA,AAAqB,AAACC,AAAYD;;AAAlC;AAAA,AAAA,AAAAtC,AAAA2C;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AACA,AAACJ,AAAY1B;;;AAUrB,AAAA,AAAChD,AAEC,AAAKgD;AAAL,AACE,AAAA,AAAQ,AAAA,AAAAkC,AAAaC,AAAOnC;AAC1B,AAACoC,AAAOD,AAAOnC;;AADjB","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__62351","re-frame.trace/*current-trace*","*current-trace*-temp-val__62352","re-frame.trace/start-trace","end__62081__auto__","re-frame.interop/now","duration__62082__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","seq__62354","cljs.core/seq","chunk__62355","count__62356","i__62357","vec__62367","cljs.core.nth","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__62372","cljs.core/first","cljs.core/next","seq__62376","chunk__62377","count__62378","i__62379","vec__62387","vec__62390","effect-key","effect-value","temp__5733__auto__","effect-fn","re_frame.registrar.get_handler","re_frame.loggers.console","value","seq__62393","chunk__62394","count__62395","i__62396","map__62404","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","map__62407","ms","dispatch","effect","cljs.core.remove","cljs.core/nil?","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","cljs.core/vector?","cljs.core/sequential?","seq__62421","chunk__62422","count__62423","i__62424","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__62425","chunk__62426","count__62427","i__62428","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^D",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.registrar/kinds","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1589988033000,1589988033000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1A","reagent/impl/batching.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","~$reagent.debug","~$reagent.impl.util"]]],["^1A","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","~$goog.dom.HtmlElement"]]],["^1A","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","~$goog.labs.userAgent.util","~$goog.string"]]],["^1A","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","~$goog.array","~$goog.asserts"]]],["^1A","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^1A","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2M","^2K","~$goog.object","~$goog.string.internal"]]],["^1A","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2N","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2P"]]],["^1A","re_frame/loggers.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","~$clojure.set"]]],["^1A","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2N"]]],["^2@","node_modules/prop-types/checkPropTypes.js"],[1589988033000,1589988033000,1549836454000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1A","reagent/impl/util.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","~$clojure.string"]]],["^1A","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2K","~$goog.reflect","^2L"]]],["^1A","re_frame/router.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^M","^K","^V","^N"]]],["^1A","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^1A","re_frame/registrar.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^K","^V"]]],["^1A","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^2@","node_modules/scheduler/cjs/scheduler.development.js"],[1589988033000,1589988033000,499162500000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E"]]],["^1A","reagent/ratom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^2I","^2H","~$reagent.impl.batching","^2W","^2O"]]],["^2@","node_modules/scheduler/cjs/scheduler.production.min.js"],[1589988033000,1589988033000,499162500000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E"]]],["^1A","re_frame/interop.cljs"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","~$goog.async.nextTick","~$reagent.core","~$reagent.ratom"]]],["^1A","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^2@","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1589988033000,1589988033000,499162500000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E"]]],["^2@","node_modules/react/index.js"],[1589988033000,1589988033000,499162500000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1A","shadow/js.js"],["a9b6248f5bcd9480b4be9de7fccb49898ed962b8","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^1A","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^1A","reagent/impl/template.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^A","^2Y","~$clojure.walk","^2I","~$reagent.impl.component","^32","^35","^2H","^2O"]]],["^1A","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2N"]]],["^2@","node_modules/react-dom/cjs/react-dom.production.min.js"],[1589988033000,1589988033000,499162500000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E","^A","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1589988033000,1589988033000,1589988018000],["^2@","node_modules/react/cjs/react.development.js"],[1589988033000,1589988033000,499162500000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E","^3:","~$module$node_modules$prop_types$checkPropTypes"]]],["^1A","re_frame/events.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^W","~$re-frame.utils","^K","^O","^V","^L","^N"]]],["^1A","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2N","^31"]]],["^1A","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2N","~$goog.html.trustedtypes","^2S","^2T","^2U","^2V"]]],["^1A","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^2@","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1589988033000,1589988033000,499162500000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E"]]],["^1A","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^1A","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2M","^2N","~$goog.html.SafeUrl","^2U","^2V","^2P"]]],["^1A","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2N","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3@","^2R","~$goog.html.uncheckedconversions","^2U","^2P"]]],["^1A","reagent/impl/component.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^2O","^A","^2I","^32","^35","^2H"]]],["^1A","clojure/walk.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P"]]],["^1A","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1A","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2M","^2N","~$goog.dom.TagName","~$goog.dom.tags","^3D","^3E","~$goog.html.SafeStyleSheet","^3@","^2R","^3?","^2S","^2T","^2Z","^2O","^2U","^2V","^2P"]]],["^1A","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2O"]]],["^1A","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^2@","node_modules/scheduler/index.js"],[1589988033000,1589988033000,499162500000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1A","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2M","^2K","^2L"]]],["^1A","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2M","^2N","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^3I","~$goog.dom.safe","^3C","^3F","~$goog.math.Coordinate","~$goog.math.Size","^2O","^2L","~$goog.string.Unicode","~$goog.userAgent"]]],["^1A","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","~$goog.debug.Error","^3O"]]],["^1A","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2M","^2N","^2L","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1A","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^2@","node_modules/object-assign/index.js"],[1589988033000,1589988033000,1484580833000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E"]]],["^1A","re_frame/db.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^K"]]],["^1A","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^1A","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",[]]],["^1A","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2M","^2O"]]],["^1A","clojure/string.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^2L","~$goog.string.StringBuffer"]]],["^2@","node_modules/react/cjs/react.production.min.js"],[1589988033000,1589988033000,499162500000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E","^3:"]]],["^1A","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2N"]]],["^1A","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^3P","^3F","^2U","^2P"]]],["^1A","re_frame/interceptor.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^V","^K","^N","^2W"]]],["^1A","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^1A","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2P"]]],["^1A","reagent/core.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^A","~$reagent.impl.template","^39","^2I","^32","^35","^2H","~$reagent.dom"]]],["^1A","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^1A","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","~$goog.math"]]],["^1A","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2M","^2N","^3B","^42"]]],["^1A","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","~$goog.debug.entryPointRegistry","~$goog.dom","^3I","^3P","^3B","^3C","^2R","^2Z","^2[","^2U"]]],["^1A","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2N","^3C","^3D","^3E","^3K","^3@","^2R","^2U","^2P"]]],["^1A","re_frame/utils.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^V"]]],["^1A","reagent/dom.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^?","^2I","^40","^32","^35"]]],["^1A","re_frame/fx.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^S","^W","^L","^K","^M","^O","^V","^N"]]],["^2@","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1589988033000,1589988033000,1549571078000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E"]]],["^1A","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q"]]],["^1A","cljs/core.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","~$goog.math.Long","~$goog.math.Integer","^2L","^2O","^2M","~$goog.Uri","^3["]]],["^1A","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2N","^3?","^2U","^2V"]]],["^1A","reagent/debug.cljs"],["1a88fae22cd0f7f66bb181aa520da264a82f6942","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P"]]],["^1A","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2M","^2N","^3E","^2O","^2U","^2V","^2P"]]],["^1A","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^31"]]],["^1A","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^3T"]]],["^2@","node_modules/scheduler/tracing.js"],[1589988033000,1589988033000,499162500000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^2@","node_modules/react-dom/cjs/react-dom.development.js"],[1589988033000,1589988033000,499162500000,"^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^2E","^A","^3:","^3;","^3=","~$module$node_modules$scheduler$tracing"]]],["^1A","clojure/set.cljs"],["16d93c2274e5f02773c418ade96d56ba9a02d17e","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P"]]],["^1A","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2M","^2N","^2L"]]],["^1A","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^2N","^2V"]]],["^1A","re_frame/trace.cljc"],["3ff92169fe7588ad62dad2d6ea3bf0e5d3e2d224","^2A",["^ ","^2B",null,"^2C",["^D",[]],"^2D",["^Q","^P","^K","^V","^3B"]]]]],"~:clj-info",["^ ","jar:file:/C:/Users/fireb/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1589382328000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/analyzer.cljc",1589988018000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/js_deps.cljc",1589988018000,"jar:file:/C:/Users/fireb/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1589988033000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1589382328000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1589382328000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1586970047000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1586970047000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/env.cljc",1589988018000,"jar:file:/C:/Users/fireb/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/trace.cljc",1590067192000,"jar:file:/C:/Users/fireb/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/interop.clj",1589988033000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/tagged_literals.cljc",1589988018000,"jar:file:/C:/Users/fireb/.m2/repository/re-frame/re-frame/0.12.0/re-frame-0.12.0.jar!/re_frame/interop.clj",1590067192000,"jar:file:/C:/Users/fireb/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/ratom.clj",1589988033000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1586970047000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1586970047000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1586970047000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/compiler.cljc",1589988018000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/externs.clj",1589988018000,"jar:file:/C:/Users/fireb/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/core.clj",1589988033000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map.clj",1589988018000,"jar:file:/C:/Users/fireb/.m2/repository/reagent/reagent/0.10.0/reagent-0.10.0.jar!/reagent/debug.clj",1589988033000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1589532195000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1589382328000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/core.cljc",1589988018000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64.clj",1589988018000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1589382328000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1586970047000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/util.cljc",1589988018000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1586970047000,"jar:file:/C:/Users/fireb/.m2/repository/org/clojure/clojurescript/1.10.764/clojurescript-1.10.764.jar!/cljs/source_map/base64_vlq.clj",1589988018000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E","^F","^I",null,"^J",["^ ","^K","^K","^L","^L","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^S","^S","^S","^T","^N","^U","^M","^V","^V","^W","^W"],"^X",["^D",["^Y"]],"~:shadow/js-access-global",["^D",["Error"]],"^Z",["^ ","^[","^W","^10","^L","^11","^K","^12","^O","^13","^O","^14","^O","^15","^V"],"~:defs",["^ ","~$kind",["^ ","^E","^1M","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^18",["~$quote",["^18",[["~$id","~$handler"]]]]],"~:doc","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"^E","^1O","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^18",[["^59","^5:"]]],"~:protocol-impl",null,"~:arglists-meta",["^18",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^57",["^18",["^58",["^18",[["^59","^5:"]]]]],"^5;","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",47,"^8",6,"^9",47,"^:",11],"^E","^1Q","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",47,"^9",47,"^53","~$cljs.core/IMap","^5;","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed."]],"^16",["^ ","^N","^N","^T","^N","^P","^P"],"~:cljs.analyzer/constants",["^ ","^X",["^D",["~:db","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^5U","^5P","^5H","^5N","^5V","^5O","^5I","^5K","^5S","^5Q","^5R","^5W","^5T","^5M","^5J","^5L","^5G"]],"^1=",["^ ","^Y",["^D",[]]],"^1>",["^ "],"^1?",["^Q","^P","^S","^W","^L","^K","^M","^O","^V","^N"]],"^H","^F","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^2?",[["^5[","~:static-fns"],true,["^5[","~:shadow-tweaks"],null,["^5[","~:source-map-inline"],null,["^5[","~:elide-asserts"],false,["^5[","~:optimize-constants"],null,["^5[","^1D"],null,["^5[","~:external-config"],null,["^5[","~:tooling-config"],null,["^5[","~:emit-constants"],null,["^5[","~:load-tests"],null,["^5[","~:form-size-threshold"],null,["^5[","~:infer-externs"],true,["^5[","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5[","~:fn-invoke-direct"],null,["^5[","~:source-map"],"/dev/null"]]]